{"version":3,"sources":["assets/fonts/SpaceMono-Regular.ttf","App.tsx","hooks/useCachedResources.ts","hooks/useColorScheme.ts"],"names":["module","exports","App","isLoadingComplete","useState","setLoadingComplete","useEffect","SplashScreen","Font","FontAwesome","font","require","e","console","warn","loadResourcesAndDataAsync","useCachedResources","_useColorScheme","View","Text"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,iC,6wBCQ5B,SAASC,IACtB,IAAMC,ECJO,WACb,MAAgDC,oBAAS,GAAM,WAAxDD,EAAiB,KAAEE,EAAkB,KAyB5C,OAtBAC,qBAAU,WACgC,aAgBvC,OAhBuC,OAAxC,YACE,IACEC,+BAGMC,YAAe,EAAD,KACfC,UAAYC,MAAI,IACnB,aAAcC,EAAQ,QAExB,MAAOC,GAEPC,QAAQC,KAAKF,GACd,QACCP,GAAmB,GACnBE,mBAEH,uBAjBc,WACyB,wBAkBxCQ,KACC,IAEIZ,EDtBmBa,GEHnBC,oBFMP,OAAKd,EAID,cAACe,EAAA,QAAI,UACH,cAACC,EAAA,QAAI,uCAJF,O","file":"static/js/app.37913d08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","import { StatusBar } from 'expo-status-bar';\nimport { Text, View } from 'react-native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return (\n      <View>\n        <Text>Wedding Invitation App</Text>\n      </View>\n    );\n  }\n}\n","import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useEffect, useState } from 'react';\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n"],"sourceRoot":""}