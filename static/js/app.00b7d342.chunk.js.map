{"version":3,"sources":["hooks/useCachedResources.ts","hooks/useColorScheme.ts","constants/Colors.ts","components/Themed.tsx","components/StyledText.tsx","components/EditScreenInfo.tsx","screens/ModalScreen.tsx","screens/NotFoundScreen.tsx","screens/TabOneScreen.tsx","screens/TabTwoScreen.tsx","navigation/index.tsx","assets/images/index.ts","constants/Layout.ts","hooks/useWindowDimensions.ts","components/BaseView.tsx","constants/Sizes.ts","screens/onboarding/components/InvitationButton.tsx","screens/onboarding/OnboardingScreen.tsx","App.tsx","assets/fonts/SpaceMono-Regular.ttf","assets/fonts/Parisienne-Regular.ttf","assets/fonts/MateSC-Regular.ttf","assets/images/background-1.jpg"],"names":["FontRes","require","useColorScheme","_useColorScheme","biscay","white","light","text","background","tint","tabIconDefault","tabIconSelected","dark","useThemeColor","props","colorName","theme","colorFromProps","Colors","Text","style","lightColor","darkColor","otherProps","color","View","backgroundColor","ParisText","fontFamily","Object","keys","MateText","StyleSheet","create","getStartedContainer","alignItems","marginHorizontal","homeScreenFilename","marginVertical","codeHighlightContainer","borderRadius","paddingHorizontal","getStartedText","fontSize","lineHeight","textAlign","helpContainer","marginTop","helpLink","paddingVertical","helpLinkText","container","flex","justifyContent","title","fontWeight","separator","height","width","padding","link","linkText","createNativeStackNavigator","createBottomTabNavigator","background1","Dimensions","get","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","BaseView","maxWidth","maxHeight","alignSelf","overflow","InvitationButton","scale","Animated","Value","animatedStyles","transform","animate","easing","setValue","sequence","timing","delay","toValue","duration","useNativeDriver","start","Easing","linear","Pressable","Sizes","flexDirection","MaterialIcons","name","OnboardingScreen","borderBottomLeftRadius","radius","borderBottomRightRadius","Image","source","position","zIndex","top","bottom","right","left","onPress","console","log","styles","bottomText","App","isLoadingComplete","setLoadingComplete","SplashScreen","Font","FontAwesome","font","e","warn","loadResourcesAndDataAsync","useCachedResources","module","exports"],"mappings":"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","file":"static/js/app.00b7d342.chunk.js","sourcesContent":["import { FontAwesome } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useEffect, useState } from 'react';\n\nexport const FontRes = {\n  'space-mono': require('../assets/fonts/SpaceMono-Regular.ttf'),\n  'parisienne': require('../assets/fonts/Parisienne-Regular.ttf'),\n  'mate': require('../assets/fonts/MateSC-Regular.ttf')\n}\n\nexport default function useCachedResources() {\n  const [isLoadingComplete, setLoadingComplete] = useState(false);\n\n  // Load any resources or data that we need prior to rendering the app\n  useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHideAsync();\n\n        // Load fonts\n        await Font.loadAsync({\n          ...FontAwesome.font,\n          ...FontRes,\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hideAsync();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  return isLoadingComplete;\n}\n","import { ColorSchemeName, useColorScheme as _useColorScheme } from 'react-native';\n\n// The useColorScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nexport default function useColorScheme(): NonNullable<ColorSchemeName> {\n  return _useColorScheme() as NonNullable<ColorSchemeName>;\n}\n","const tintColorLight = '#2f95dc';\nconst tintColorDark = '#fff';\n\nexport default {\n  biscay: '#1A365D',\n  white: '#fff',\n  light: {\n    text: '#000',\n    background: '#fff',\n    tint: tintColorLight,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorLight,\n  },\n  dark: {\n    text: '#fff',\n    background: '#000',\n    tint: tintColorDark,\n    tabIconDefault: '#ccc',\n    tabIconSelected: tintColorDark,\n  },\n};\n","/**\n * Learn more about Light and Dark modes:\n * https://docs.expo.io/guides/color-schemes/\n */\n\nimport { Text as DefaultText, View as DefaultView } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\n\nexport function useThemeColor(\n  props: { light?: string; dark?: string },\n  colorName: keyof typeof Colors.light & keyof typeof Colors.dark\n) {\n  const theme = useColorScheme();\n  const colorFromProps = props[theme];\n\n  if (colorFromProps) {\n    return colorFromProps;\n  } else {\n    return Colors[theme][colorName];\n  }\n}\n\ntype ThemeProps = {\n  lightColor?: string;\n  darkColor?: string;\n};\n\nexport type TextProps = ThemeProps & DefaultText['props'];\nexport type ViewProps = ThemeProps & DefaultView['props'];\n\nexport function Text(props: TextProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const color = useThemeColor({ light: lightColor, dark: darkColor }, 'text');\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props: ViewProps) {\n  const { style, lightColor, darkColor, ...otherProps } = props;\n  const backgroundColor = useThemeColor({ light: lightColor, dark: darkColor }, 'background');\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n","import { FontRes } from \"../hooks/useCachedResources\";\nimport { Text, TextProps } from \"./Themed\";\n\nexport function MonoText(props: TextProps) {\n  return (\n    <Text\n      {...props}\n      style={[props.style, { fontFamily: Object.keys(FontRes)[0] }]}\n    />\n  );\n}\n\nexport function ParisText(props: TextProps) {\n  return (\n    <Text\n      {...props}\n      style={[props.style, { fontFamily: Object.keys(FontRes)[1] }]}\n    />\n  );\n}\n\nexport function MateText(props: TextProps) {\n  return (\n    <Text\n      {...props}\n      style={[props.style, { fontFamily: Object.keys(FontRes)[2] }]}\n    />\n  );\n}\n","import * as WebBrowser from 'expo-web-browser';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport { MonoText } from './StyledText';\nimport { Text, View } from './Themed';\n\nexport default function EditScreenInfo({ path }: { path: string }) {\n  return (\n    <View>\n      <View style={styles.getStartedContainer}>\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Open up the code for this screen:\n        </Text>\n\n        <View\n          style={[styles.codeHighlightContainer, styles.homeScreenFilename]}\n          darkColor=\"rgba(255,255,255,0.05)\"\n          lightColor=\"rgba(0,0,0,0.05)\">\n          <MonoText>{path}</MonoText>\n        </View>\n\n        <Text\n          style={styles.getStartedText}\n          lightColor=\"rgba(0,0,0,0.8)\"\n          darkColor=\"rgba(255,255,255,0.8)\">\n          Change any of the text, save the file, and your app will automatically update.\n        </Text>\n      </View>\n\n      <View style={styles.helpContainer}>\n        <TouchableOpacity onPress={handleHelpPress} style={styles.helpLink}>\n          <Text style={styles.helpLinkText} lightColor={Colors.light.tint}>\n            Tap here if your app doesn't automatically update after making changes\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/get-started/create-a-new-app/#opening-the-app-on-your-phonetablet'\n  );\n}\n\nconst styles = StyleSheet.create({\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightContainer: {\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  helpContainer: {\n    marginTop: 15,\n    marginHorizontal: 20,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    textAlign: 'center',\n  },\n});\n","import { StatusBar } from 'expo-status-bar';\nimport { Platform, StyleSheet } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\nexport default function ModalScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Modal</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <EditScreenInfo path=\"/screens/ModalScreen.tsx\" />\n\n      {/* Use a light status bar on iOS to account for the black space above the modal */}\n      <StatusBar style={Platform.OS === 'ios' ? 'light' : 'auto'} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import { StyleSheet, TouchableOpacity } from 'react-native';\n\nimport { Text, View } from '../components/Themed';\nimport { RootStackScreenProps } from '../types';\n\nexport default function NotFoundScreen({ navigation }: RootStackScreenProps<'NotFound'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>This screen doesn't exist.</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { StyleSheet } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\nimport { RootTabScreenProps } from '../types';\n\nexport default function TabOneScreen({ navigation }: RootTabScreenProps<'TabOne'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Tab One</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <EditScreenInfo path=\"/screens/TabOneScreen.tsx\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import { StyleSheet } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Text, View } from '../components/Themed';\n\nexport default function TabTwoScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Tab Two</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n      <EditScreenInfo path=\"/screens/TabTwoScreen.tsx\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneScreen}\n        options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n          title: 'Tab One',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoScreen}\n        options={{\n          title: 'Tab Two',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n","\n\nexport const background1 = require(\"./background-1.jpg\")","import { Dimensions } from 'react-native';\n\nconst width = Dimensions.get('window').width;\nconst height = Dimensions.get('window').height;\n\nexport default {\n  window: {\n    width,\n    height,\n  },\n  isSmallDevice: width < 375,\n};\n\nexport const baseWidth = 500;\nexport const baseHeight = 600;","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from \"react\";\nimport { View, ViewProps } from \"react-native\";\nimport { baseHeight, baseWidth } from \"../constants/Layout\";\nimport useWindowDimensions from \"../hooks/useWindowDimensions\";\n\nexport default function BaseView({ style, ...props }: ViewProps) {\n  const { width, height } = useWindowDimensions();\n  return (\n    <View\n      style={[\n        {\n          width: width,\n          height: height,\n          maxWidth: baseWidth,\n          maxHeight: baseHeight,\n          backgroundColor: \"yellow\",\n          alignSelf: \"center\",\n          overflow: \"hidden\",\n        },\n        style,\n      ]}\n      {...props}\n    ></View>\n  );\n}\n","\n\nexport default {\n  4: 4,\n  8: 8,\n  16: 16,\n  24: 24,\n  32: 32,\n  40: 40,\n  48: 48,\n  56: 56,\n}","import { MaterialIcons } from \"@expo/vector-icons\";\nimport React, { useEffect } from \"react\";\nimport { Pressable, Animated, Easing, PressableProps } from \"react-native\";\nimport { MateText } from \"../../../components/StyledText\";\nimport { View } from \"../../../components/Themed\";\nimport Colors from \"../../../constants/Colors\";\nimport Sizes from \"../../../constants/Sizes\";\n\nexport default function InvitationButton(props: PressableProps) {\n  const minScale = 1;\n  const maxScale = 1.1;\n  const scale = new Animated.Value(minScale);\n\n  function animate(easing: (value: number) => number) {\n    scale.setValue(minScale);\n    Animated.sequence([\n      Animated.timing(scale, {\n        delay: 100,\n        toValue: maxScale,\n        duration: 250,\n        easing,\n        useNativeDriver: false,\n      }),\n      Animated.timing(scale, {\n        delay: 150,\n        toValue: minScale,\n        duration: 300,\n        easing,\n        useNativeDriver: false,\n      }),\n    ]).start(() => {\n      animate(Easing.linear);\n    });\n  }\n\n  const animatedStyles = [\n    {\n      transform: [{ scale: scale }],\n    },\n  ];\n\n  useEffect(() => {\n    animate(Easing.linear);\n  }, []);\n  return (\n    <Pressable {...props}>\n      <Animated.View\n        style={[\n          animatedStyles,\n          {\n            backgroundColor: Colors.biscay,\n            padding: Sizes[8],\n            borderRadius: Sizes[16],\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          },\n        ]}\n      >\n        <MaterialIcons name=\"mail\" color={\"white\"} />\n        <View style={{ width: Sizes[8] }} />\n        <MateText>Buka Undangan</MateText>\n      </Animated.View>\n    </Pressable>\n  );\n}\n","import {\n  MaterialIcons,\n} from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { View, Image, StyleSheet } from \"react-native\";\nimport { background1 } from \"../../assets/images\";\nimport BaseView from \"../../components/BaseView\";\nimport { MateText, ParisText } from \"../../components/StyledText\";\nimport Colors from \"../../constants/Colors\";\nimport Sizes from \"../../constants/Sizes\";\nimport useWindowDimensions from \"../../hooks/useWindowDimensions\";\nimport InvitationButton from \"./components/InvitationButton\";\n\nexport default function OnboardingScreen() {\n  const radius = 1000;\n  const borderBottom = radius / 2;\n  const { width, height } = useWindowDimensions();\n  return (\n    <BaseView style={{ backgroundColor: Colors.biscay }}>\n      <View\n        style={{\n          flex: 5,\n          width: radius,\n          height: radius,\n          backgroundColor: \"grey\",\n          borderBottomLeftRadius: borderBottom,\n          borderBottomRightRadius: borderBottom,\n          alignSelf: \"center\",\n          alignItems: \"center\",\n          overflow: \"hidden\",\n        }}\n      >\n        <Image\n          source={background1}\n          style={{\n            width: width,\n            height: height,\n            position: \"absolute\",\n            zIndex: 2,\n          }}\n        />\n        <View\n          style={{\n            top: 0,\n            bottom: 0,\n            right: 0,\n            left: 0,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            position: \"absolute\",\n            zIndex: 3,\n            paddingVertical: Sizes[56],\n          }}\n        >\n          <ParisText style={{ color: \"white\", fontSize: Sizes[48] }}>\n            AF\n          </ParisText>\n          <MateText style={{ color: \"white\", fontSize: Sizes[32] }}>\n            Name 1 & Name 2\n          </MateText>\n          <MateText style={{ color: \"white\", fontSize: Sizes[24] }}>\n            25.01.2027\n          </MateText>\n          <View style={{ flex: 1 }} />\n          <InvitationButton onPress={() => console.log(\"press\")} />\n        </View>\n      </View>\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: Colors.biscay,\n          justifyContent: \"center\",\n        }}\n      >\n        <View style={styles.bottomText}>\n          <MateText>Create with </MateText>\n          <MaterialIcons name=\"7mp\" color={Colors.white} />\n        </View>\n        <View style={styles.bottomText}>\n          <MateText>2027 Name1&Name2. All Right Reserved</MateText>\n        </View>\n      </View>\n    </BaseView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  bottomText: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import { StatusBar } from \"expo-status-bar\";\r\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\r\n\r\nimport useCachedResources from \"./hooks/useCachedResources\";\r\nimport useColorScheme from \"./hooks/useColorScheme\";\r\nimport Navigation from \"./navigation\";\r\nimport OnboardingScreen from \"./screens/onboarding/OnboardingScreen\";\r\n\r\nexport default function App() {\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return <OnboardingScreen></OnboardingScreen>;\r\n    return (\r\n      <SafeAreaProvider>\r\n        <Navigation colorScheme={colorScheme} />\r\n        <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Parisienne-Regular.ttf\";","module.exports = \"data:font/ttf;base64,\"","module.exports = __webpack_public_path__ + \"static/media/background-1.d29de1cf.jpg\";"],"sourceRoot":""}